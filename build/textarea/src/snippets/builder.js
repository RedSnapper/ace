__ace_shadowed__.define("ace/snippets/builder",["require","exports","module"],function(e,t,n){t.snippetText="# Internal macros\nsnippet append \n	@iAppend(${1:~var},${0})\nsnippet ap\n	@iAppend(${1:~var},${0})\nsnippet birth\n	@iBirth(${1:NODEREF},${2:COMPARISON},${3:TRUE},${4:FALSE})\nsnippet console\n	@iConsole(${1:e|i|t|n|w},${2:MESSAGE})\nsnippet co\n	@iConsole(${1:e|i|t|n|w},${2:MESSAGE})\nsnippet content\n	@iContent(${1:NODEREF},${2:SEGNAME},${3:[METADATA]})\nsnippet date\n	@iDate(${1:DATE},${2:FORMAT},${3:COMPARATOR},${4:[TRUE]},${5:[FALSE]})\nsnippet death\n	@iDeath(${1:NODEREF},${2:COMPARISON},${3:TRUE},${4:FALSE})\nsnippet decode\n	@iDecode(${0:CONTENT})\nsnippet digest\n	@iDigest(${1:CONTENT},${2:md4|md5|mdc3|sha1|sha256|sha384|sha512|dss1|ripemd160})\nsnippet embed\n	@iEmbed(${1:REF},${2:[META]})\nsnippet eq\n	@iEq(${1:A},${2:B},${3:TRUE},${4:FALSE})\nsnippet eqfamily\n	@iEqFamily(${1:TEST-NODE},${2:FAMILY-NODE},${3:TRUE},${4:FALSE})\nsnippet eqf\n	@iEqFamily(${1:TEST-NODE},${2:FAMILY-NODE},${3:TRUE},${4:FALSE})\nsnippet eqnode\n	@iEqNode(${1:NODE-A},${2:NODE-B},${3:TRUE},${4:FALSE})\nsnippet eqn\n	@iEqNode(${1:NODE-A},${2:NODE-B},${3:TRUE},${4:FALSE})\nsnippet eqsibs\n	@iEqSibs(${1:NODE-A},${2:NODE-B},${3:TRUE},${4:FALSE})\nsnippet eval\n	@iEval(${1:CONTENT},${2:CONTENT})\nsnippet existcontent\n	@iExistContent(${1:NODE},${2:SEGMENT},${3:TRUE},${4:FALSE})\nsnippet exc\n	@iExistContent(${1:NODE},${2:SEGMENT},${3:TRUE},${4:FALSE})\nsnippet existmedia\n	@iExistMedia(${1:REF},${2:TRUE},${3:FALSE})\nsnippet exm\n	@iExistMedia(${1:REF},${2:TRUE},${3:FALSE})\nsnippet exnode\n	@iExistNode(${1:REF},${2:TRUE},${3:FALSE})\nsnippet exn\n	@iExistNode(${1:REF},${2:TRUE},${3:FALSE})\nsnippet existsimilar\n	@iExistSimilar(${1:REF},${2:TRUE},${3:FALSE})\nsnippet exists\n	@iExists(${1:VAR},${2:TRUE},${3:FALSE})\nsnippet ex\n	@iExists(${1:VAR},${2:TRUE},${3:FALSE})\nsnippet forancestry\n	@iForAncestry(${1:STARTNODE},${2:DIRECTION(F|R)},${3:TERMINATION-POINT},${4:PATTERN},\n		${5}\n	)\nsnippet fora\n	@iForAncestry(${1:STARTNODE},${2:DIRECTION(F|R)},${3:TERMINATION-POINT},${4:PATTERN},\n		${5}\n	)\nsnippet fornodes\n	@iForNodes(${1:LIST},${2:\\$NODE\\$},${3:\\$NODE\\$},${4:SORT},\n		${5}\n	)\nsnippet forn\n	@iForNodes(${1:LIST},${2:\\$NODE\\$},${3:\\$NUM\\$},${4:SORT},\n		${5}\n	)\nsnippet forpeers\n	@iForPeers(${1:NODE},${2:TERMINATION-POINT},${3:\\$NODE\\$},${4:\\$NUM\\$},${5:SORT},\n		${6}\n	)\nsnippet forp\n	@iForPeers(${1:NODE},${2:TERMINATION-POINT},${3:\\$NODE\\$},${4:\\$NUM\\$},${5:SORT},\n		${6}\n	)\nsnippet forsibs\n	@iForSibs(${1:NODE},${2:\\$NODE\\$},${3:\\$NUM\\$},\n		${4}\n	)\nsnippet fors\n	@iForSibs(${1:NODE},${2:\\$NODE\\$},${3:\\$NUM\\$},\n		${4}\n	)\nsnippet forsimilar\n	@iForSimilar(${1:NODE},${2:\\$NODE\\$},${3:SCORE-PATTERN},${4:TAX-ROOT},${5:DIRECTION},\n		${6}\n	)\nsnippet fortax\n	@iForTax(${1:NODE},${2:TAX-ROOT},${3:\\$NODE\\$},\n		${4}	\n	)\nsnippet fortaxnodes\n	@iForTaxNodes(${1:TAX-NODE},${2:\\$NODE\\$},${3:\\$NUM\\$},${4:SORT},\n		${5}\n	)\nsnippet get\n	@iGet(~${1:VAR})\nsnippet hex\n	@iHex(${1:CONTENT},${2:${2:[COMPARATOR,TRUE,FALSE]}})\nsnippet id\n	@iID(${1:NODE})\nsnippet lang\n	@iLang(${1:${2:[COMPARATOR,TRUE,FALSE]}})\nsnippet langid\n	@iLangID(${1:${2:[COMPARATOR,TRUE,FALSE]}})\nsnippet layout\n	@iLayout(${1:NODE},${2:COMPARATOR},${3:TRUE},${4:FALSE})\nsnippet la\n	@iLayout(${1:NODE},${2:COMPARATOR},${3:TRUE},${4:FALSE})\nsnippet layoutname\n	@iLayoutName(${1:NODE},${2:[COMP,TRUE,FALSE]})\nsnippet left\n	@iLeft(${1:INPUT},${2:OFFSET},${3:${2:[COMPARATOR,TRUE,FALSE]}})\nsnippet length\n	@iLength(${1:INPUT},${2:${2:[COMPARATOR,TRUE,FALSE]}})\nsnippet link\n	@iLink(${1:NODE[:OFFSET]})\nsnippet linkref\n	@iLinkRef(${1:NODE},${2:${2:[COMPARATOR,TRUE,FALSE]}})\nsnippet lower\n	@iLower(${1:STRING},${2:[COMPARATOR,TURE,FALSE]})\nsnippet math\n	@iMath(${1:-|*|x|m|L|G|=|f|c|Rf|R|Rx},${2:INPUT1},${3:INPUT2},${4:COMP},${5:TRUE},${6:FALSE})\nsnippet media\n	@iMedia(${1:MEDIAREF},${2:[META]})\nsnippet mid\n	@iMid(${1:STRING},${2:OFFSET},${3:SIZE},${4:[COMP,T,F]})\nsnippet index\n	@iIndex(${1:DELIMITER},${2:LIST},${3:normalise|size|find|resize|get|set|ifempty|erase|push|append|pop|drop|reverse},${4:[PARM1,PARM2]})\nsnippet null\n	@iNull(${1:CONTENT})\nsnippet numchildren\n	@iNumChildren(${1:NODE},${2:${2:[COMPARATOR,TRUE,FALSE]}})\nsnippet numc\n	@iNumChildren(${1:NODE},${2:${2:[COMPARATOR,TRUE,FALSE]}})\nsnippet numgen\n	@iNumGen(${1:NODE},${2:${2:[COMPARATOR,TRUE,FALSE]}})\nsnippet numg\n	@iNumGen(${1:NODE},${2:${2:[COMPARATOR,TRUE,FALSE]}})\nsnippet numgens\n	@iNumGens(${1:[COMPARATOR,TRUE,FALSE]})\nsnippet numpage\n	@iNumPage(${1:[COMPARATOR,TRUE,FALSE]})\nsnippet nump\n	@iNumPage(${1:[COMPARATOR,TRUE,FALSE]})\nsnippet numpages\n	@iNumPages(${1:NODE},${2:[COMPARATOR,TRUE,FALSE]})\nsnippet numsib\n	@iNumSib(${1:NODE},${2:[COMPARATOR,TRUE,FALSE]})\nsnippet nums\n	@iNumSib(${1:NODE},${2:[COMPARATOR,TRUE,FALSE]})\nsnippet position\n	@iPosition(${1:HAYSTACK},${2:NEEDLE},${3:[COMPARATOR,TRUE,FALSE]})\nsnippet pos\n	@iPosition(${1:HAYSTACK},${2:NEEDLE},${3:[COMPARATOR,TRUE,FALSE]})\nsnippet preview\n	@iPreview(${1:PREVIEW},${2:LIVE})\nsnippet pr\n	@iPreview(${1:PREVIEW},${2:LIVE})\nsnippet regex\n	@iRegex(${1:NEEDLE},${2:REPLACE},${3:HAYSTACK})\nsnippet reg\n	@iRegex(${1:NEEDLE},${2:REPLACE},${3:HAYSTACK})\nsnippet rembr\n	@iRembr(${1:CONTENT})\nsnippet rembrp\n	@iRembrp(${1:CONTENT})\nsnippet replace\n	@iReplace(${1:NEEDLE},${2:REPLACE},${3:HAYSTACK})\nsnippet rep\n	@iReplace(${1:NEEDLE},${2:REPLACE},${3:HAYSTACK})\nsnippet reset\n	@iReset(${1:VARIABLE})\nsnippet res\n	@iReset(${1:VARIABLE})\nsnippet right\n	@iRight(${1:INPUT},${2:OFFSET},${3:[COMPARATOR,TRUE,FALSE]})\nsnippet segmentname\n	@iSegmentName(${1:[COMPARATOR,TRUE,FALSE]})\nsnippet set\n	@iSet(~${1:VAR},${2:VALUE})\nsnippet setcache\n	@iSetCache(${1:VARIABLE},${2:VALUE})\nsnippet sig\n	@iSig(${1:VARIABLE},${2:TRUE},${3:FALSE})\nsnippet shorttitle\n	@iShortTitle(${1:NODE},${2:[COMPARATOR,TRUE,FALSE]})\nsnippet stitle\n	@iShortTitle(${1:NODE},${2:[COMPARATOR,TRUE,FALSE]})\nsnippet suffix\n	@iSuffix(${1:NODE:OFFSET},${2:[COMPARATOR,TRUE,FALSE]})\nsnippet tax\n	@iTax(${1:NODE},${2:META},${3:[COMPARATOR,TRUE,FALSE]})\nsnippet team\n	@iTeam(${2:NODE},${2:[COMPARATOR,TRUE,FALSE]})\nsnippet tech\n	@iTech(${1:[COMPARATOR,TRUE,FALSE]})\nsnippet timing\n	@iTiming(${1:MODE})\nsnippet title\n	@iTitle(${1:NODE},${2:[COMPARATOR,TRUE,FALSE]})\nsnippet urlencode\n	@iUrlEncode(${1:CONTENT})\nsnippet unhex\n	@iUnHex(${1:CONTENT},${2:[COMPARATOR,TRUE,FALSE]})\nsnippet upper\n	@iUpper(${1:CONTENT},${2:[COMPARATOR,TRUE,FALSE]})\nsnippet use\n	@iUse(${1:VARIABLE})\n\n#HTML\nsnippet .\n	@wDiv(@wa(class,${1}),\n		${2}\n	)\nsnippet div\n	@wDiv(${1},\n		${2}\n	)\nsnippet div.\n	@wDiv(@wa(class,${1}),\n		${2}\n	)\nsnippet section.\n	@wSection(@wa(class,${1}),\n		${2}\n	)\n\n\n\n\n\nsnippet li\n	@wLi(,\n		${1}\n	)\n\nsnippet ul+\n	@wUl(,\n		@wLi(,${1})\n		${2}\n	)",t.scope="builder"})